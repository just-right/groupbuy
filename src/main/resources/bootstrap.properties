#对应配置文件规则application
#spring.application.name=didispace
#对应配置文件规则profile
spring.cloud.config.profile=dev
#对应配置文件规则label
spring.cloud.config.label=master

#eureka.client.service-url.defaultZone=http://localhost:5001/eureka/
#server.port=8001
##开启通过服务访问Config Server功能
spring.cloud.config.discovery.enabled=true
##指定Config Server注册的服务名
#spring.cloud.config.uri=http://config-server:2001/
spring.cloud.config.discovery.service-id=config-server
#失败快速响应
spring.cloud.config.fail-fast=true
#获取不到资源 -> 最大重试次数
spring.cloud.config.retry.max-attempts=2

#用户服务配置信息
eureka.instance.hostname=localhost
server.port=6001
spring.application.name=product-service
#向注册中心注册自己
eureka.client.register-with-eureka=true
#需要检索服务
eureka.client.fetch-registry=true
#服务注册中心地址
eureka.client.service-url.defaultZone=http://localhost:5001/eureka/

spring.main.allow-bean-definition-overriding=true

#重试机制
spring.cloud.loadbalancer.retry.enabled=true
user-service.ribbon.ConnectTimeout=250
user-service.ribbon.ReadTimeout=1000
user-service.ribbon.OkToRetryOnAllOperations=true
user-service.ribbon.MaxAutoRetriesNextServer=2
user-service.ribbon.MaxAutoRetries=1

#数据库信息配置
spring.datasource.url=jdbc:mysql://localhost:3306/${dataBase}?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.username=${dataBaseUserName}
spring.datasource.password=${dataBasePassword}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



spring.sleuth.sampler.probability=1.0
spring.sleuth.web.client.enabled=true
spring.zipkin.base-url=http://localhost:9411/
#logging.level.root=debug
#
#使用命令开启网页管理界面 ->
#需要为创建的用户设置权限
#rabbitmqctl.bat set_permissions -p / luffy .* .* .*
#
#
#
##配置RabbitMQ连接信息
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=luffy
#spring.rabbitmq.password=wangyong159111
#
##绑定主题
#spring.cloud.stream.bindings.Channel_Input.destination=Channel_Input
#spring.cloud.stream.bindings.Channel_Output.destination=Channel_Output
##实现自动转化
#spring.cloud.stream.bindings.Channel_Input.contentType=application/json
#spring.cloud.stream.bindings.Channel_Output.contentType=application/json
##设置消费组 已轮询的方式进行接受和输出
#spring.cloud.stream.bindings.input.group=group_input
##开启消费者分区功能
#spring.cloud.stream.bindings.input.consumer.partitioned=true
##指定当前消费者总实例数量
#spring.cloud.stream.instance-count=2
##设置当前实例的索引号
#spring.cloud.stream.instance-index=0












